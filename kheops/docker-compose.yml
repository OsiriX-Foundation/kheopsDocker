version: '3.1'
#https://github.com/docker-library/postgres/issues/151
services:

  ldap:
    container_name: ldap
    image: dcm4che/slapd-dcm4chee:2.4.50-22.3
    environment:
      - STORAGE_DIR=/storage/fs1
    volumes:
      - dcm4chee-ldap-ldap:/var/lib/ldap
      - dcm4chee-ldap-slapdd:/etc/ldap/slapd.d
    restart: on-failure
    networks:
      - pacs_network

  pacsdb:
    container_name: pacsdb
    image: dcm4che/postgres-dcm4chee:12.2-22
    logging:
      driver: json-file
      options:
        max-size: "10m"
    environment:
      - POSTGRES_DB=pacsdb
      - POSTGRES_USER=pacs
      - POSTGRES_PASSWORD_FILE=/run/secrets/pacs_db_password
      - STORAGE_DIR=/storage/fs1
    volumes:
      - dcm4chee-db-data:/var/lib/postgresql/data
    restart: on-failure
    secrets:
      - pacs_db_password
    networks:
      - pacs_network

  arc:
    container_name: arc
    image: dcm4che/dcm4chee-arc-psql:5.22.3
    environment:
      WILDFLY_CHOWN: /storage /opt/wildfly/standalone
      WILDFLY_WAIT_FOR: ldap:389 pacsdb:5432
      JAVA_OPTS: -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n
      POSTGRES_DB: pacsdb
      POSTGRES_USER: pacs
      POSTGRES_PASSWORD_FILE: /run/secrets/pacs_db_password
      POSTGRES_HOST: pacsdb
      STORAGE_DIR: /storage/fs1
      LDAP_URL: ldap://ldap:389
    depends_on:
      - ldap
      - pacsdb
    volumes:
      - dcm4chee-arc-wildfly:/opt/wildfly/standalone
      - /dcm4chee-arc/storage:/storage
    restart: on-failure
    secrets:
      - pacs_db_password
    networks:
      - pacs_network


  keycloak:
    image: jboss/keycloak:9.0.3
    container_name: keycloak
    command: ["-b", "0.0.0.0"]
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD_FILE: /run/secrets/keycloak_admin_password
      KEYCLOAK_IMPORT: /tmp/kheops-realm.json
# In this configuration, users of the Web UI will access KHEOPS and be
# redirected to Keycloak using the frontend URL
      KEYCLOAK_FRONTEND_URL: http://kheopsinthebox.local:8080/auth
    volumes:
      - keycloak-standalone-data:/opt/jboss/keycloak/standalone/data
      - ./keycloak/realm/kheops-realm.json:/tmp/kheops-realm.json:cached
      - ./keycloak/themes/kheops:/opt/jboss/keycloak/themes/kheops:cached
    networks:
      - keycloak_network
    secrets:
      - keycloak_admin_password


  auth-db:
    container_name: authdb
    image: postgres:${KHEOPS_AUTHORIZATION_PSQL_DATABASE_IMAGE_TAG}
    volumes:
      - kheops-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=kheops
      - POSTGRES_USER=kheopsuser
      - POSTGRES_PASSWORD_FILE=/run/secrets/kheops_authdb_pass
    secrets:
      - kheops_authdb_pass
    restart: on-failure
    networks:
      - kheops_network


  kheops-authorization:
    container_name: kheopsauthorization
    image: osirixfoundation/kheops-authorization:${KHEOPS_AUTHORIZATION_IMAGE_TAG}
    restart: on-failure
    env_file: docker-compose.env
    depends_on:
      - auth-db
    environment:
       - KHEOPS_OIDC_PROVIDER=http://keycloak:8080/auth/realms/kheops
#      - JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8089"
    secrets:
      - kheops_superuser_hmasecret
      - kheops_auth_hmasecret
      - kheops_authdb_pass
      - kheops_keycloak_clientsecret
      - kheops_client_dicomwebproxysecret
      - kheops_client_zippersecret
      - kheops_metric_ressource_password
    networks:
      - kheops_network
      - keycloak_network

  kheops-zipper:
    container_name: kheopszipper
    image: osirixfoundation/kheops-zipper:${KHEOPS_ZIPPER_IMAGE_TAG}
    restart: on-failure
    env_file: docker-compose.env
    secrets:
      - kheops_client_zippersecret
    networks:
      - kheops_network


  kheops-ui:
    container_name: kheopsui
    image: osirixfoundation/kheops-ui:${KHEOPS_UI_IMAGE_TAG}
    env_file: docker-compose.env
    environment:
      - KHEOPS_OIDC_PROVIDER=http://kheopsinthebox.local:8080/auth/realms/kheops
    restart: on-failure
    depends_on:
      - kheops-authorization
    networks:
      - frontend_network


  kheops-dicomweb-proxy:
    container_name: kheopsdicomwebproxy
    image: osirixfoundation/kheops-dicomweb-proxy:${KHEOPS_DICOMWEB_PROXY_IMAGE_TAG}
    restart: on-failure
    env_file: docker-compose.env
    depends_on:
      - kheops-authorization
    secrets:
      - kheops_auth_hmasecret_post
      - kheops_client_dicomwebproxysecret
    networks:
      - kheops_network


  kheops-reverse-proxy:
    image: osirixfoundation/kheops-reverse-proxy:${KHEOPS_REVERSE_PROXY_IMAGE_TAG}
    container_name: kheopsreverseproxy
    env_file: docker-compose.env
    ports:
      - "8042:8042"
    depends_on:
      - kheops-authorization
      - kheops-dicomweb-proxy
      - pacs-authorization-proxy
      - ohif
      - wsiviewer
    extra_hosts:
      - "${ROOT_URL}:127.0.0.1"
    networks:
      - kheops_network
      - frontend_network

  pacs-authorization-proxy:
    container_name: pacsauthorizationproxy
    env_file: docker-compose.env
    image: osirixfoundation/pacs-authorization-proxy:${PACS_AUTHORIZATION_PROXY_IMAGE_TAG}
    secrets:
      - kheops_auth_hmasecret
      - kheops_auth_hmasecret_post
    depends_on:
      - arc
    networks:
      - pacs_network
      - kheops_network

  ohif:
    image: osirixfoundation/viewer:test
    container_name: ohif
    networks:
      - frontend_network
    volumes:
      - ./ohif/app-config.js:/usr/share/nginx/html/app-config.js

  wsiviewer:
    image: osirixfoundation/kheops-report-provider:test-unsecure
    container_name: wsiviewer
    networks:
      - frontend_network
    environment:
      - PORT=80
      - SCHEME=http
      - HOST=wsiviewer
    secrets:
      - privkey.pem

secrets:
  privkey.pem:
    file: ${SECRETS_PATH}/privkey.pem
  kheops_pacsdb_pass:
    file: ${SECRETS_PATH}/kheops_pacsdb_pass
  kheops_authdb_pass:
    file: ${SECRETS_PATH}/kheops_authdb_pass
  kheops_superuser_hmasecret:
    file: ${SECRETS_PATH}/kheops_superuser_hmasecret
  kheops_auth_hmasecret:
    file: ${SECRETS_PATH}/kheops_auth_hmasecret
  kheops_auth_hmasecret_post:
    file: ${SECRETS_PATH}/kheops_auth_hmasecret_post
  kheops_keycloak_clientsecret:
    file: ${SECRETS_PATH}/kheops_keycloak_clientsecret
  kheops_client_dicomwebproxysecret:
    file: ${SECRETS_PATH}/kheops_client_dicomwebproxysecret
  kheops_client_zippersecret:
    file: ${SECRETS_PATH}/kheops_client_zippersecret
  kheops_metric_ressource_password:
    file: ${SECRETS_PATH}/kheops_metric_ressource_password
  keycloak_admin_password:
    file: ${SECRETS_PATH}/keycloak_admin_password
  pacs_db_password:
    file: ${SECRETS_PATH}/pacs_db_password

networks:
  pacs_network:
    driver: bridge
  kheops_network:
    driver: bridge
  keycloak_network:
    driver: bridge
  frontend_network:
    driver: bridge

volumes:
  kheops-db-data:
  keycloak-standalone-data:
  dcm4chee-ldap-ldap:
  dcm4chee-ldap-slapdd:
  dcm4chee-db-data:
  dcm4chee-arc-wildfly:
