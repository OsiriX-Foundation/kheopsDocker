apiVersion: v1
kind: Service
metadata:
  name: pacsldap
  labels:
    app: pacsldap
spec:
  ports:
  - port: 389
    targetPort: 389
  selector:
    app: pacsldap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pacsldap
spec:
  selector:
    matchLabels:
      app: pacsldap
  replicas: 1
  template:
    metadata:
      labels:
        app: pacsldap
    spec:
      containers:
      - name: pacsldap
        image: dcm4che/slapd-dcm4chee:2.4.44-15.0
        imagePullPolicy: Always
        ports:
        - containerPort: 389
        envFrom:
        - configMapRef:
            name: kubeunige
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: db
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: db
  replicas: 1
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: osirixfoundation/kheops-database:liquibase
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: kubeunige
        volumeMounts:
        - name: secrets
          mountPath: "/run/secrets/kheops_authdb_pass"
          subPath: kheops_authdb_pass
        - name: secrets
          mountPath: "/run/secrets/kheops_pacsdb_pass"
          subPath: kheops_pacsdb_pass
        - name: kheops-db-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: secrets
        secret:
          secretName: kheops.secrets
          items:
          - key: kheops_authdb_pass
            path: kheops_authdb_pass
          - key: kheops_pacsdb_pass
            path: kheops_pacsdb_pass
      - name: kheops-db-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: pacsarc
  labels:
    app: pacsarc
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: pacsarc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pacsarc
spec:
  selector:
    matchLabels:
      app: pacsarc
  replicas: 1
  template:
    metadata:
      labels:
        app: pacsarc
    spec:
      containers:
      - name: pacsarc
        image: osirixfoundation/kheops-dcm4chee-arc-psql:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: WILDFLY_CHOWN
          value: /storage /opt/wildfly/standalone
        - name: WILDFLY_WAIT_FOR
          value: pacsldap:389 db:5432
        - name: JAVA_OPTS
          value: -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n
        envFrom:
        - configMapRef:
            name: kubeunige
        volumeMounts:
        - name: secrets
          mountPath: "/run/secrets/kheops_pacsdb_pass"
          subPath: kheops_pacsdb_pass
        - name: dcm4chee-arc-wildfly
          mountPath: /opt/wildfly/standalone
        - name: dcm4chee-arc-storage
          mountPath: /storage
      volumes:
      - name: secrets
        secret:
          secretName: kheops.secrets
          items:
          - key: kheops_pacsdb_pass
            path: kheops_pacsdb_pass
      - name: dcm4chee-arc-wildfly
        emptyDir: {}
      - name: dcm4chee-arc-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kheopsauthorization
  labels:
    app: kheopsauthorization
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: kheopsauthorization
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kheopsauthorization
spec:
  selector:
    matchLabels:
      app: kheopsauthorization
  replicas: 1
  template:
    metadata:
      labels:
        app: kheopsauthorization
    spec:
      containers:
      - name: kheopsauthorization
        image: osirixfoundation/kheops-authorization:dev
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: kubeunige
        volumeMounts:
        - name: secrets
          mountPath: "/run/secrets/kheops_superuser_hmasecret"
          subPath: kheops_superuser_hmasecret
        - name: secrets
          mountPath: "/run/secrets/kheops_auth_hmasecret"
          subPath: kheops_auth_hmasecret
        - name: secrets
          mountPath: "/run/secrets/kheops_authdb_pass"
          subPath: kheops_authdb_pass
        - name: secrets
          mountPath: "/run/secrets/kheops_keycloak_clientsecret"
          subPath: kheops_keycloak_clientsecret
        - name: secrets
          mountPath: "/run/secrets/kheops_client_dicomwebproxysecret"
          subPath: kheops_client_dicomwebproxysecret
        - name: secrets
          mountPath: "/run/secrets/kheops_client_zippersecret"
          subPath: kheops_client_zippersecret
        - name: secrets
          mountPath: "/run/secrets/kheops_metric_ressource_password"
          subPath: kheops_metric_ressource_password
      volumes:
      - name: secrets
        secret:
          secretName: kheops.secrets
          items:
          - key: kheops_superuser_hmasecret
            path: kheops_superuser_hmasecret
          - key: kheops_auth_hmasecret
            path: kheops_auth_hmasecret
          - key: kheops_authdb_pass
            path: kheops_authdb_pass
          - key: kheops_keycloak_clientsecret
            path: kheops_keycloak_clientsecret
          - key: kheops_client_dicomwebproxysecret
            path: kheops_client_dicomwebproxysecret
          - key: kheops_client_zippersecret
            path: kheops_client_zippersecret
          - key: kheops_metric_ressource_password
            path: kheops_metric_ressource_password
---
apiVersion: v1
kind: Service
metadata:
  name: kheopszipper
  labels:
    app: kheopszipper
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: kheopszipper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kheopszipper
spec:
  selector:
    matchLabels:
      app: kheopszipper
  replicas: 1
  template:
    metadata:
      labels:
        app: kheopszipper
    spec:
      containers:
      - name: kheopszipper
        image: osirixfoundation/kheops-zipper:master
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: kubeunige
        volumeMounts:
        - name: secrets
          mountPath: "/run/secrets/kheops_client_zippersecret"
          subPath: kheops_client_zippersecret
      volumes:
      - name: secrets
        secret:
          secretName: kheops.secrets
          items:
          - key: kheops_client_zippersecret
            path: kheops_client_zippersecret
---
apiVersion: v1
kind: Service
metadata:
  name: kheopsui
  labels:
    app: kheopsui
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: kheopsui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kheopsui
spec:
  selector:
    matchLabels:
      app: kheopsui
  replicas: 1
  template:
    metadata:
      labels:
        app: kheopsui
    spec:
      containers:
      - name: kheopsui
        image: osirixfoundation/kheops-ui:master
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: kubeunige
---
apiVersion: v1
kind: Service
metadata:
  name: kheopsdicomwebproxy
  labels:
    app: kheopsdicomwebproxy
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: kheopsdicomwebproxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kheopsdicomwebproxy
spec:
  selector:
    matchLabels:
      app: kheopsdicomwebproxy
  replicas: 1
  template:
    metadata:
      labels:
        app: kheopsdicomwebproxy
    spec:
      containers:
      - name: kheopsdicomwebproxy
        image: osirixfoundation/kheops-dicomweb-proxy:master
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: kubeunige
        volumeMounts:
        - name: secrets
          mountPath: "/run/secrets/kheops_auth_hmasecret_post"
          subPath: kheops_auth_hmasecret_post
        - name: secrets
          mountPath: "/run/secrets/kheops_client_dicomwebproxysecret"
          subPath: kheops_client_dicomwebproxysecret
      volumes:
      - name: secrets
        secret:
          secretName: kheops.secrets
          items:
          - key: kheops_auth_hmasecret_post
            path: kheops_auth_hmasecret_post
          - key: kheops_client_dicomwebproxysecret
            path: kheops_client_dicomwebproxysecret
---
apiVersion: v1
kind: Service
metadata:
  name: pacsauthorizationproxy
  labels:
    app: pacsauthorizationproxy
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: pacsauthorizationproxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pacsauthorizationproxy
spec:
  selector:
    matchLabels:
      app: pacsauthorizationproxy
  replicas: 1
  template:
    metadata:
      labels:
        app: pacsauthorizationproxy
    spec:
      containers:
      - name: pacsauthorizationproxy
        image: osirixfoundation/pacs-authorization-proxy:ci-test
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: kubeunige
        volumeMounts:
        - name: secrets
          mountPath: "/run/secrets/kheops_auth_hmasecret_post"
          subPath: kheops_auth_hmasecret_post
        - name: secrets
          mountPath: "/run/secrets/kheops_auth_hmasecret"
          subPath: kheops_auth_hmasecret
      volumes:
      - name: secrets
        secret:
          secretName: kheops.secrets
          items:
          - key: kheops_auth_hmasecret_post
            path: kheops_auth_hmasecret_post
          - key: kheops_auth_hmasecret
            path: kheops_auth_hmasecret
---
apiVersion: v1
kind: Service
metadata:
  name: kheopsreverseproxy
  labels:
    app: kheopsreverseproxy
spec:
  type: LoadBalancer
  ports:
  - port: 8042
    targetPort: 8042
  selector:
    app: kheopsreverseproxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kheopsreverseproxy
spec:
  selector:
    matchLabels:
      app: kheopsreverseproxy
  replicas: 1
  template:
    metadata:
      labels:
        app: kheopsreverseproxy
    spec:
      containers:
      - name: kheopsreverseproxy
        image: osirixfoundation/kheops-reverse-proxy:ci-test
        imagePullPolicy: Always
        ports:
        - containerPort: 8042
        envFrom:
        - configMapRef:
            name: kubeunige
        volumeMounts:
        - name: secrets
          mountPath: "/run/secrets/privkey1.pem"
          subPath: privkey1.pem
        - name: secrets
          mountPath: "/run/secrets/fullchain1.pem"
          subPath: fullchain1.pem
      volumes:
      - name: secrets
        secret:
          secretName: kheops.secrets
          items:
          - key: privkey1.pem
            path: privkey1.pem
          - key: fullchain1.pem
            path: fullchain1.pem
